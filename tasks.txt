Задание 1

	Вводится строка. Найти первый индекс начала фрагмента «ра» во введенной строке. Результат вывести на экран.
	Вводится список целых чисел в одну строчку через пробел. Необходимо представить его в виде списка целых чисел, а затем, вычислить сумму этих чисел и результат вывести на экран.

Задание 2

	Вводится строка с одним арифметическим действием (сложением) для двух целых чисел. Например, «5+3» или «7 + 2». Обратите внимание на возможные пробелы до и после оператора +. Вычислить, указанное в строке арифметическое действие и результат вывести на экран.
	Вводится список вещественных чисел в одну строчку через пробел. Необходимо представить его в виде списка вещественных чисел, а затем, найти минимальное среди этих чисел и вывести его на экран.

Задание 3

	Вводится слово. Необходимо определить, является ли это слово палиндромом (читается одинаково и вперед и назад, например, слово «Анна» – палиндром). Вывести True, если слово палиндром и False – в противном случае. Программу реализовывать без использования условного оператора if.
	Вводится список оценок студента в одну строчку через пробел. Необходимо преобразовать эту строку в список из чисел и подсчитать количество двоек в нем. Результат (число двоек) вывести на экран. Программу реализовать без использования операторов циклов for или while.

Задание 4

	Вводится пароль. Убедиться, что пароль введен корректно по следующим критериям: - число символов не менее 8; - присутствует хотя бы один из символов «$#!?-_»; - присутствует хотя бы один из символов заглавной буквы латинского алфавита (A-D). Вывести True, если пароль корректен и False – в противном случае. Программу реализовывать без использования условного оператора if.
	Вводятся слова в одну строчку через пробел. Преобразовать их в список из слов. Проверить, повторяется ли в этом списке последнее введенное слово. Вывести True, если это так и False – в противном случае. Программу реализовывать без использования условного оператора if.


Задание 5

	Вводится фрагмент URL адреса латинскими символами с дефисами, например: python-info--data--study Необходимо все два подряд идущих дефиса (--) заменить на один дефис (-). Дополнительно подсчитать число таких замен. Результат (преобразованную строку и число замен) вывести на экран.
	В одну строку вводится информация по студенту в формате (без кавычек): «Имя возраст группа список оценок» Список оценок – это набор целых чисел от 2 до 5. Их может быть разное количество. Преобразовать эту информацию в список в формате: ['Имя', возраст, 'группа', [3, 5, 4, 2, ...]] То есть, сформировать вложенный список из оценок. Результат (список) вывести на экран.

Задание 6

	Вводится строка из нескольких слов, слова разделены пробелом. Убедиться, что первое и последнее слово во введенной строке не совпадают. Вывести True, если это так и False – в противном случае. Программу реализовать без использования условного оператора if.
	Вводится список из четырех предметов в формате: 
название_1=вес_1 
название_2=вес_2 
название_3=вес_3 
название_4=вес_4 
Необходимо преобразовать введенные данные в двумерный список вида: [['название_1', вес_1], ['название_2', вес_2], ...] Вес – это целое число. Результат (список) вывести на экран.

Задание 7

	Вводится вещественное значение x – аргумент функции:  y(x)=x^2-2. С помощью F-строки вывести на экран сообщение (без кавычек): «Значение функции y(x) = число_1, при значении x = число_2» Величины (число_1 и число_2) выводить с точностью до сотых.
	Вводится список по четырем смартфонам в формате: 
название_1:цена_1 
… 
название_4:цена_4 
Здесь цена – это вещественное число. Преобразовать эту информацию в список вида: [['название_1', цена_1], ['название_2', цена_2], ...] Результат (список) вывести на экран.



Задание 8

	Вводятся два целых числа a, b – катеты прямоугольного треугольника. С помощью F строки вывести на экран сообщение (без кавычек): «Периметр прямоугольного треугольника со сторонами a, b, c, равен: ». Все вещественные значения выводить с точностью до десятых.
	Вводится список городов в одну строчку через пробел. Необходимо преобразовать его в список и вывести названия через один. Например: Ввод: Москва Омск Уфа Тверь Вывод: Москва Уфа Также вывести общее число введенных городов.

Задание 9

	С каждой новой строки вводится следующая информация: - ФИО студента - возраст (целое число) - вес (вещественное число) - название группы Необходимо объединить все эти данные в единую строку с помощью оператора +, записанные через пробел. Результат вывести на экран.
	Вводятся названия стран через пробел в одну строчку. Сформировать на основе этой строки список из стран. Поменять местами значения первого и последнего элемента этого списка. Вывести на экран полученный список, а также значение True, если в списке есть страна «Россия», иначе – значение False. Программу реализовать без использования циклов и условного оператора if.

Задание 10

	Вводится строка. Определить в ней индекс вхождения фрагмента «до» во введенной строке, начиная с конца строки. Найденный индекс вывести на экран.
	Вводится строка из вещественных чисел, записанных через пробел. Необходимо преобразовать ее в список из вещественных чисел и подсчитать суммы первой и второй половины сформированного списка. Вывести значения на экран с точностью до сотых.

Задание 11

	Вводятся три целых числа a, b, c. С помощью условного оператора if найти минимальное значение и вывести его на экран.
	Вводятся два целых значения m, n. Необходимо вывести их частное (m/n), если m нацело делится на n (и n не равно нулю). Иначе вывести их произведение. Реализовать программу с использованием тернарного условного оператора.



Задание 12

	Вводится натуральное четырехзначное число. Если оно кратно трем, то вычислить сумму цифр этого числа, иначе – произведение цифр. Результат вывести на экран.
	Имеется меню: 
1. Кафедра ТК 
2. Факультет ФИСТ 
3. Кафедра Радиотехника 
4. Выход из программы
Представить это меню в виде многострочной строки и вывести ее на экран. Запросить у пользователя ввести пункт меню и с помощью операторов if-elif-else реализовать выбор введенного пункта меню. На экране отобразить: «Выбран … пункт меню». Если указано недопустимое значение, то «Такой пункт не найден».

Задание 13

	Вводится натуральное число. Определить, является ли оно трехзначным. Если это так, то вывести «Трехзначное число», иначе – «Не трехзначное число». Программу реализовать без использования операторов циклов.
	Вводятся два натуральных числа: a – время в секундах; b – время в минутах. С помощью тернарного условного оператора определить наибольшее время из двух введенных и отобразить результат на экране.

Задание 14

	Вводятся вещественные положительные числа a, b, c, d. Выяснить, можно ли прямоугольник со сторонами a, b уместить внутри прямоугольника со сторонами c, d так, чтобы каждая из сторон одного прямоугольника была параллельна или перпендикулярна каждой стороне второго прямоугольника. Вывести на экран «Входит», если входит, а иначе - «Не входит».
	Вводятся оценки студента в виде целых чисел в одну строчку через пробел. Необходимо преобразовать эту строку в список целых чисел и если в нем окажется более одной двойки, то вывести сообщение «Отчислен», а иначе – «Учится». Программу реализовать без использования операторов циклов.

Задание 15

	Вася пытается высунуть голову в форточку размерами a и b см (вводятся с клавиатуры). Приняв условно, что его голова – круглая диаметром d см (вводится с клавиатуры), определить, сможет ли Вася сделать это. Для прохождения головы в форточку необходим зазор в 1 см с каждой стороны. Вывести «ДА», если голова пролезает и «НЕТ» - в противном случае.
	Вводятся названия городов в одну строчку через пробел. Преобразовать строку в список из названий и если в этом списке отсутствует город Москва, то добавить это значение в конец списка. Программу реализовать без использования операторов циклов.

Задание 16

	Вводится email-адрес. Необходимо проверить корректность его написания по следующим критериям: - длина не менее 5 символов; - символ ‘@’ стоит до символа ‘.’. Вывести «ДА», если email записан корректно и «НЕТ» - в противном случае.
	Вводятся целые числа в одну строчку. Они могут быть введены через пробел или через запятую. Необходимо преобразовать их в список целых чисел. Затем, вычислить среднее арифметическое значений полученного списка и вывести результат на экран. Программу реализовать без использования операторов циклов.

Задание 17

	Вводится натуральное число. Найти все делители этого числа и вывести на экран. Программу реализовать с использованием цикла while.
	Вводится фрагмент URL-адреса в виде строки (пример): python----cikly-for--and---while Необходимо все подряд идущие дефисы заменить одним дефисом (-). Результат вывести на экран.

Задание 18

	Вводится натуральное число. Необходимо вычислить сумму цифр этого числа. Результат вывести на экран. Программу реализовать с использованием цикла while.
	Вводится список городов в одну строчку через пробел. Преобразовать эту строку в список слов и, затем, через итератор выбрать первые два значения этого списка и вывести их на экран.

Задание 19

	Вводится список названий городов в одну строчку через пробел. Определить, что в этом списке все города имеют длину более 5 символов. Реализовать программу с использованием операторов while и break. Вывести ДА, если условие выполняется, и НЕТ – в противном случае.
	Задается двумерный список чисел размерностью 5 х 5 элементов, состоящий из нулей и, в некоторых позициях, единиц (формируется самостоятельно). Требуется проверить, не касаются ли единицы друг друга по горизонтали, вертикали и диагонали. То есть, вокруг каждой единицы должны быть нули. Если проверка проходит вывести ДА, иначе – НЕТ.

Задание 20

	Вводится список имен студентов в одну строчку через пробел. Определить, что хотя бы одно имя в этом списке начинается и заканчивается на ту же самую букву (без учета регистра). Реализовать программу с использованием операторов while и break. Вывести ДА, если условие выполняется, и НЕТ – в противном случае.
	В некоторой стране используются денежные купюры достоинством в 1, 2, 4, 8, 16, 32 и 64. Вводится натуральное число n. Как наименьшим количеством таких денежных купюр можно выплатить сумму n? Вывести на экран список купюр для формирования суммы n. Предполагается, что имеется достаточно большое количество купюр всех достоинств.

Задание 21

	Вводится натуральное число n. Вывести первое найденное натуральное число (то есть, перебирать числа, начиная с 1), квадрат которого больше значения n. Реализовать программу с использованием операторов while и break.
	Задается список с вложенностью, равной 3. Например, такой: lst = [1, 2, [True, False, ["a", "ra"]], 3] Необходимо с помощью вложенных циклов for создать новый одномерный список, который бы содержал все значения заданного списка lst. Результат вывести на экран.

Задание 22

	Вводятся целые числа в одну строчку через пробел. Необходимо преобразовать эти данные в список целых чисел. Затем, перебрать этот список в цикле for и просуммировать все нечетные значения. Результат вывести на экран.
	Задано игровое поле для игры «Крестики-нолики» в виде двумерного списка. Например: P = [['x', 'x', 'o'], ['o', 'x', 'x'], ['#', 'x', '#']] Здесь 'x' – крестик; 'o' – нолик; '#' – свободная клетка. Необходимо проверить, есть ли в поле P выигрышная ситуация для крестиков. Вывести «ДА», если крестики победили и «НЕТ» - в противном случае.

Задание 23

	Вводится список названий городов в одну строчку через пробел. Перебрать все эти названия с помощью цикла for и определить, начинается ли название следующего города на последнюю букву предыдущего города в списке. Если последними встречаются буквы 'ь', 'ъ', 'ы', то берется следующая с конца буква слова. Вывести на экран ДА, если последовательность удовлетворяет правилу, и НЕТ – в противном случае.
	Имеется список предметов с указанием их веса (в гр.): карандаш 20 зеркальце 100 рубашка 300 молоток 600 пила 400 удочка 1200 Их следует представить в виде вложенного (двумерного) списка. Вводится натуральное число N – суммарный вес, который можно положить в рюкзак. Предметы кладутся в порядке убывания их веса. Напишите программу, которая для введенного N определит наибольшее число предметов, положенных в рюкзак. На экране отобразить список этих предметов. (Каждый предмет в единственном экземпляре).

Задание 24

	Вводится строка с номером телефона. Ожидается формат ввода: +7(xxx)xxx-xx-xx где x - это цифра. Необходимо проверить, что введенная строка соответствует этому формату. Вывести ДА, если соответствует, и НЕТ – в противном случае.
	Вводится четырехзначное целое положительное число. Подумайте, как можно определить итератор для перебора его цифр. Выведите цифры этого введенного числа с помощью итератора.

Задание 25

	Вводится список в виде целых чисел в одну строку через пробел. Необходимо сначала сформировать список на основе введенной строки, а затем, каждое значение этого списка изменить, возведя в квадрат. Отобразить результат на экране. Программу следует реализовать с использованием функции enumerate.
	Иван Иванович 1 марта открыл счет в банке, положив 1000 руб. Через каждый месяц размер вклада увеличивается на 2 % от имеющейся суммы. Определить, через сколько месяцев размер вклада превысит 1200 руб. Результат (число месяцев) вывести на экран.

Задание 26

	Вводится список в виде целых чисел в одну строку через пробел. С помощью цикла for необходимо найти наименьшее четное значение в этом списке. Полученный результат вывести на экран. Если четного значения нет, то вывести слово "None" (без кавычек). Реализовать программу без использования функции min.
	Вводится натуральное число. Необходимо проверить, есть ли в этом числе какие-либо две одинаковые цифры, стоящие рядом. Вывести эти цифры, если такие есть, иначе вывести «НЕТ».

Задание 27

	Вводятся вещественные числа в строку через пробел. Необходимо на их основе сформировать список с помощью list comprehension (генератора списков) из модулей введенных чисел (в списке должны храниться именно числа, а не строки). Результат вывести на экран.
	Задается двумерный (вложенный) список, представляющий таблицу целых чисел. Необходимо с помощью list comprehension преобразовать его в одномерный так, чтобы значения элементов шли в обратном порядке. Результат преобразования отобразить на экране.

Задание 28

	Вводится семизначное целое положительное число. С помощью list comprehension сформировать список, содержащий цифры этого числа (в списке должны быть записаны числа, а не строки). Результат вывести на экран в одну строку через пробел.
	Вводится список целых чисел в строку через пробел. Количество чисел равно N2 . С помощью list comprehension сформировать из них двумерный (вложенный) список размером N x N (квадратную таблицу чисел). Гарантируется, что из набора введенных чисел можно сформировать квадратную матрицу (таблицу). Результат отобразить на экране.

Задание 29

	Вводится натуральное число N. С помощью list comprehension сформировать двумерный список размером N x N, состоящий из нулей, а по главной диагонали - единицы. (Главная диагональ – это элементы, имеющие одинаковые индексы, например, a[1][1], a[2][2], …). Результат вывести на экран.
	Имеется список из строк: t = ["– Скажи-ка, дядя, ведь не даром", "Я Python выучил с каналом", "Наместников что раздавал?"] Необходимо преобразовать его в двумерный (вложенный) список, где каждая строка представляется списком из слов (слова разделяются пробелом). При этом сохранять слова только длиной более трех символов. Решить данную задачу с использованием list comprehension. Результат отобразить на экране

Задание 30

	Вводятся названия городов в строку через пробел. Необходимо сформировать список с помощью list comprehension, содержащий названия городов длиной более пяти символов. Результат вывести на экран.
	Вводятся строки из целых чисел через пробел, пока пользователь не введет пустую строку. Необходимо все введенные строки вначале сохранить в список. Затем, на основе этого списка, используя list comprehension, сформировать двумерный список, где каждый элемент будет представлять одно отдельное число. Результат вывести на экран.

Задание 31

	Вводится натуральное число n. Необходимо сформировать список с помощью list comprehension, состоящий из делителей числа n (включая и само число n). Результат вывести на экран.
	Используя вложенный list comprehension, сформируйте двумерный список, представляющий следующую квадратную таблицу чисел размером 4 х 4: 
1 2 3 4 
5 6 7 8 
9 10 11 12 
13 14 15 16 
Результат выведите на экран.

Задание 32

	Вводится натуральное число N. Необходимо сгенерировать вложенный список с помощью list comprehension, размером N x N, где первая строка содержала бы все нули, вторая - все единицы, третья - все двойки и так до N-й строки. Результат вывести на экран.
	Вводятся два вещественных значения a, b (a < b). С помощью list comprehension сформируйте список со значениями синусов от аргументов в диапазоне [a; b] с шагом 0.1. Результат выведите на экран в виде списка чисел с точностью до сотых.

Задание 33

	Вводится список вещественных чисел. С помощью list comprehension сформировать список, состоящий из элементов введенного списка, имеющих четные индексы (то есть, выбрать все элементы с четными индексами). Результат вывести на экран.
	Вводятся названия три строки: первая строка содержит названия городов, вторая – названия стран, а третья – названия рек. Все названия следуют в строке через пробел. С помощью list comprehension сформируйте единый список из слов, длины которых больше пяти. Результат выведите на экран.

Задание 34

	Вводятся два списка целых чисел одинаковой длины каждый с новой строки. С помощью list comprehension сформировать третий список, состоящий из суммы соответствующих пар чисел введенных списков. Результат вывести на экран.
	Имеется двумерный список чисел. Например: d = [[1, 2, 3], [4, 5, 6], [7, 8, 9], [8, 7, 6]] С помощью list comprehension необходимо сформировать новый список, в котором строки идут в обратном порядке. Результат выведите на экран.

Задание 35

	Вводятся названия стран в одну строчку через пробел. С помощью list comprehension сформировать список, состоящий из названий стран, в которых присутствует фрагмент «ро» (без учёта регистра). Результат вывести на экран.
	Имеется трехмерный список. Например: t = [[[1, 2, 3], [4, 5, 6]], [[7, 8, 9], [9, 8, 7]], [[0, 1, 2], [-1, -2]] ] С помощью list comprehension необходимо сформировать новый одномерный список, состоящий из значений элементов списка t. Результат выведите на экран.

Задание 36

	Вводятся два натуральных числа a, b (a < b). С помощью list comprehension сформировать список чисел в диапазоне [a; b] с шагом 0.1. Результат вывести на экран.
	Вводится строка с координатами точек в формате (пример): 5;4 -3;2 7;56 -4;-10 … То есть, пары координат разделены пробелом, а сами координаты – точкой с запятой. При этом все числовые значения – целые числа. Необходимо с помощью list comprehension преобразовать эту строку в двумерный список вида (пример): [[5, 4], [-3, 2], [7, 56], …] Результат вывести на экран.

Задание 37

	Вводится строка из русских букв. Необходимо ее закодировать, а затем, раскодировать азбукой Морзе. После каждой закодированной буквы должен стоять пробел (символ окончания кода буквы). После последнего кода пробела быть не должно (в конце строки). Закодированную строку вывести на экран. morze = {'а': '.-', 'б': '-...', 'в': '.--', 'г': '--.', 'д': '-..', 'е': '.', 'ё': '.', 'ж': '...-', 'з': '--..', 'и': '..', 'й': '.---', 'к': '-.-', 'л': '.-..', 'м': '--', 'н': '-.', 'о': '---', 'п': '.--.', 'р': '.-.', 'с': '...', 'т': '-', 'у': '..-', 'ф': '.. .', 'х': '....', 'ц': '-.-.', 'ч': '---.', 'ш': '----', 'щ': '--.-', 'ъ': '--.--', 'ы': '-.--', 'ь': '-..-', 'э': '..-..', 'ю': '..--', 'я': '.-.-', ' ': '-···-'}
	Вводятся названия городов в одну строку через пробел. На их основе формируется кортеж. Если в этом кортеже нет города "Москва", то следует его добавить в конец кортежа. Результат вывести на экран.


Задание 38

	Вводится строка с русскими и латинскими буквами. Например: «Занятие по языку Python» Необходимо с помощью словаря t = {'ё': 'yo', 'а': 'a', 'б': 'b', 'в': 'v', 'г': 'g', 'д': 'd', 'е': 'e', 'ж': 'zh', 'з': 'z', 'и': 'i', 'й': 'y', 'к': 'k', 'л': 'l', 'м': 'm', 'н': 'n', 'о': 'o', 'п': 'p', 'р': 'r', 'с': 's', 'т': 't', 'у': 'u', 'ф': 'f', 'х': 'h', 'ц': 'c', 'ч': 'ch', 'ш': 'sh', 'щ': 'shch', 'ъ': '', 'ы': 'y', 'ь': '', 'э': 'e', 'ю': 'yu', 'я': 'ya'} перевести введенную строку в латиницу. Кроме того, символы " ?!;:" заменять на символ дефиса (-). Замены делать без учета регистра (строку перевести в нижний регистр – малые буквы). Результат вывести на экран.
	Вводятся имена студентов в одну строчку через пробел. На их основе формируется кортеж. Отобразите на экране все имена из этого кортежа, которые содержат фрагмент "ва". Имена выводятся в одну строку через пробел.

Задание 39

	Имеется словарь с описанием предметов: things = {'карандаш': 20, 'зеркальце': 100, 'зонт': 500, 'рубкашка': 300} Затем, в программе вводятся данные в формате: предмет_1=вес_1 … предмет_2=вес_2 пока не будет введена пустая строка. Необходимо введенные данные сохранить в отдельном словаре d, а затем, в словарь things добавить содержимое словаря d. Результат вывести на экран.
	В аккаунте социальной сети Сергея прокомментировали фотографию. Некоторые посетители оставляли несколько комментариев. Требуется по списку комментариев определить уникальное число комментаторов. Комментарии поступают на вход программы в формате: имя 1: комментарий 1 имя 2: комментарий 2 ... имя N: комментарий N пока не будет введена пустая строка. Также полагается, что имена у разных комментаторов не совпадают. Вывести на экран общее число уникальных комментаторов.

Задание 40

	Вводится информация по книгам в формате: автор_1: название_1 … автор_N: название_N пока не будет введена пустая строка. Авторы могут повторяться. Необходимо сформировать словарь только из уникальных авторов с первым встретившимся значением. Результат вывести на экран.
	Вводятся названия городов в одну строку через пробел. На их основе формируется кортеж. Если в этом кортеже присутствует город "Самара", то следует его удалить. Результат вывести на экран в виде строки с названиями городов через пробел. Обратите внимание, что город Самара может быть записан несколько раз. Тогда нужно удалить все его упоминания.

Задание 41

	Вводятся оценки студента в одну строчку через пробел. Необходимо сформировать словарь, в котором ключами являются оценки (числа), а значениями – количество этих оценок во введенном списке. Результат вывести на экран.
	Вводятся два списка целых чисел каждый с новой строки (в строке наборы чисел через пробел). Необходимо выбрать и отобразить на экране числа, присутствующие в первом списке, но отсутствующие во втором. Результат выведите на экран в виде строки чисел, записанных через пробел. Задачу решить с использованием множеств.

Задание 42

	Вводятся числа в одну строчку в формате: 1;3 4 5;2 4 3 4;1;6 8 10; … То есть, здесь группы чисел, разделенных точкой с запятой. Одно число – это длина отрезка, три числа – это треугольник, четыре – четырехугольник и т.п. На основе введенных данных необходимо сформировать словарь с ключами: отрезок, треугольник, четырехугольник и т.п., а значениями должен быть двумерный (вложенный) кортеж, содержащий соответствующие группы чисел.
	Вводятся два списка городов каждый с новой строки (в каждой строке названия через пробел). Необходимо сравнить их между собой на равенство по уникальным (не повторяющимся) городам. Если списки содержат одни и те же уникальные города, то вывести «ДА», иначе – «НЕТ». Задачу решить с использованием множеств.

Задание 43

	Вводятся номера телефонов в формате: +7xxxxxxxxxx +6xxxxxxxxxx +7xxxxxxxxxx +5xxxxxxxxxx … пока не будет введена пустая строка. Здесь x – это цифры. Необходимо сформировать словарь, в котором ключами будут коды стран: «+7», «+5», «+6», «+8», …, а значениями – список соответствующих номеров телефонов.
	Вводятся два списка городов каждый с новой строки (в строке названия через пробел), которые объехал Сергей в 1-й и 2-й годы своего путешествия по России. Требуется определить, включал ли его маршрут во 2-й год все города 1-го года путешествия? Если это так, то вывести «ДА», иначе – «НЕТ». Задачу решить с использованием множеств.

Задание 44

	В программе в каждой новой строке вводятся целые числа, пока не будет введено число 0. Необходимо для каждого введенного числа вычислить косинус и вывести результат с точностью до тысячных. Если числовое значение вводится повторно, то заново его вычислять не нужно, а брать ранее вычисленное значение из словаря.
	Вводятся два списка целых чисел каждый с новой строки (в строке наборы чисел через пробел). Необходимо выбрать и отобразить на экране числа, присутствующие и в первом, и во втором списках. Результат выведите на экран в виде строки чисел, записанных через пробел. Задачу решить с использованием множеств.

Задание 45

	Объявите функцию, которая принимает три стороны треугольника и проверяет, можно ли из переданных аргументов составить треугольник. (Напомню, что у любого треугольника длина третьей стороны должна быть меньше суммы двух других). Если проверка проходит, вернуть значение True, иначе - значение False. Вызовите функцию и выведите на экран ДА, если функция возвратит True и НЕТ, если возвращается значение False.
	Вводится целое положительное число N. Необходимо написать рекурсивную функцию, которая отображает на экране последовательность целых чисел от 1 до N (включительно). Каждое число выводится с новой строки.

Задание 46

	Объявите функцию для проверки числа на четность (возвращается True, если переданное число четное и False, если число нечетное). После объявления функции в цикле необходимо считывать целое числовое значение (функцией input), пока не поступит число 1. Если введенное значение четное (проверяется с помощью заданной функции), то оно выводится на экран.
	Вводится список целых чисел в одну строчку через пробел. Необходимо вычислить сумму введенных значений, используя рекурсивную функцию (для перебора элементов списка). Функция должна возвращать значение суммы. (Выводить на экран она ничего не должна). Вызвать рекурсивную функцию для введенного с клавиатуры списка и отобразить значение вычисленной суммы на экране.

Задание 47

	Объявите функцию для проверки числа на нечетность (возвращается True, если переданное число нечетное и False, если число четное). После объявления функции прочитайте (с помощью функции input) список целых значений, записанных в одну строку через пробел. И, используя генератор списков и объявленную функцию, сформируйте список из нечетных значений на основе введенного исходного списка. Результат отобразите на экране.
	Вводится натуральное число n. Необходимо с помощью рекурсивной функции сформировать последовательность чисел Фибоначчи по правилу: первые два числа равны 1 и 1, а каждое следующее значение равно сумме двух предыдущих. Пример такой последовательности для первых 7 чисел: 1, 1, 2, 3, 5, 8, 13, ... Функция должна возвращать список сформированной последовательности длиной n. Вызовите эту функцию и отобразите на экране полученный список.

Задание 48

	Вводится слово. Если это слово RECT, то следует объявить функцию с именем get_sq, двумя параметрами, вычисляющую площадь прямоугольника и возвращающую вычисленное значение. Если же введенное слово не RECT (любое другое), то объявляется функция с тем же именем get_sq, с двумя параметрами для вычисления периметра прямоугольника. Вычисленное значение возвращается функцией. В конце программы вызовите функцию с двумя аргументами и выведите результат на экран.
	Вводится натуральное число n. Необходимо с помощью рекурсивной функции вычислить факториал числа n. Напомню, что факториал числа, равен: n! = 1 * 2 * 3 *...* n. Функция должна возвращать вычисленное значение. Вызовите эту функцию и отобразите на экране результат ее работы.

Задание 49

	Объявите функцию, которая принимает строку (в качестве аргумента) и возвращает False, если длина строки меньше трех символов. Иначе возвращается значение True. После объявления функции прочитайте (с помощью функции input) список названий городов, записанных в одну строку через пробел. Затем, используя генератор списка и созданную функцию, сформируйте список из названий городов длиной не менее трех символов на основе введенного исходного списка. Результат отобразите на экране.
	. Имеется следующий многомерный список: d = [1, 2, [True, False], ["Москва", "Уфа", [100, 101], [True, [1, -1]]], 7.89] С помощью рекурсивной функции создать на его основе одномерный список из значений элементов списка d. Функция должна возвращать новый созданный одномерный список. Вызовите эту функцию и отобразите на экране результат ее работы.

Задание 50

	Объявите функцию, которая принимает строку (в качестве аргумента) и возвращает два значения в виде кортежа: переданная строка и ее длина. После объявления функции прочитайте (с помощью функции input) список названий городов, записанных в одну строку через пробел. Затем, используя генератор словарей и созданную функцию, сформируйте словарь d в формате: d = {: , ..., : }.
	Объявите анонимную (лямбда) функцию для вычисления модуля числа (то есть, отрицательные числа нужно делать положительными). Вызовите эту функцию для введенного с клавиатуры вещественного числа и отобразите результат на экране.



